# SMTP Email Server Environment Configuration
# Copy this file to .env and modify the values as needed

# =====================================================
# REQUIRED CONFIGURATION
# =====================================================

# Security Configuration (REQUIRED)
# Generate with: openssl rand -hex 32
SECRET_KEY=your-super-secret-key-change-this-in-production

# Email Encryption Key (REQUIRED)
# Generate with: python3 -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
EMAIL_ENCRYPTION_KEY=your-encryption-key-here

# User Authentication (REQUIRED)
# Format: username:password_hash:totp_secret
# Generate password hash: python3 -c "import bcrypt; print(bcrypt.hashpw(b'your_password', bcrypt.gensalt()).decode())"
# Generate TOTP secret: python3 -c "import pyotp; print(pyotp.random_base32())"
EMAIL_UI_USERS="admin:password_hash_here:totp_secret_here"

# SSL Certificates (REQUIRED for SMTP STARTTLS)
# Base64-encoded certificates only
# Generate: openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes
# Encode: SSL_CERT_BASE64=$(base64 -w0 < cert.pem)
#         SSL_KEY_BASE64=$(base64 -w0 < key.pem)
SSL_CERT_BASE64=base64-encoded-certificate-here
SSL_KEY_BASE64=base64-encoded-private-key-here

# =====================================================
# SERVER CONFIGURATION
# =====================================================

# Database Configuration
DATABASE_URL=sqlite:///./data/emails.db

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_URL=redis://localhost:6379
REDIS_QUEUE=smtp_emails
REDIS_PUBSUB_PREFIX=email_notify:

# SMTP Server Configuration
SMTP_PORT=587
SMTP_HOST=0.0.0.0

# Web UI Configuration
WEB_PORT=8001
WEB_HOST=0.0.0.0

# =====================================================
# FEATURE TOGGLES
# =====================================================

ENABLE_SWAGGER=true   # Set to 'false' to disable Swagger UI (/docs, /redoc)
ENABLE_UI=true        # Set to 'false' to disable web UI (API-only mode)

# =====================================================
# ADVANCED CONFIGURATION
# =====================================================

# Security
COOKIE_SECURE=false    # Set to 'true' in production with HTTPS
ACCESS_TOKEN_EXPIRE_MINUTES=30
ALGORITHM=HS256

# Logging
LOG_LEVEL=INFO

# =====================================================
# DEPLOYMENT EXAMPLES
# =====================================================

# Local Development:
# - Use SSL_CERT_BASE64 and SSL_KEY_BASE64
# - REDIS_HOST=localhost
# - COOKIE_SECURE=false
# - ENABLE_SWAGGER=true

# Docker Container:
# - Use SSL_CERT_BASE64 and SSL_KEY_BASE64
# - REDIS_HOST=localhost (Redis embedded in container)
# - COOKIE_SECURE=false (unless using HTTPS)
# - ENABLE_SWAGGER=true (for development)

# Production Deployment:
# - Use SSL_CERT_BASE64 and SSL_KEY_BASE64 with real certificates
# - COOKIE_SECURE=true
# - ENABLE_SWAGGER=false
# - Strong SECRET_KEY and EMAIL_ENCRYPTION_KEY
# - Custom EMAIL_UI_USERS with strong passwords
# ALGORITHM=HS256
